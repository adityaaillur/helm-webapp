pipeline {
    agent any
    
    environment {
        GITHUB_TOKEN = credentials('github') 
        CHART_NAME = "csye7125"
    }
    
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/cyse7125-su24-team15/helm-webapp-cve-processor'
            }
        }
        
        stage('Create New Version') {
            steps {
                script {
                    sh 'npx semantic-release'
                }
            }
        }
        
        stage('Update Chart.yaml') {
            steps {
                script {
                    def newVersion = sh(script: "npx semantic-release --dry-run | grep 'next version' | awk '{print \$3}'", returnStdout: true).trim()
                    
                    sh "sed -i 's/version:.*/version: ${newVersion}/' Chart.yaml"
                    
                    sh '''
                    git add Chart.yaml
                    git commit -m "chore: update Chart.yaml to version ${newVersion}"
                    git push origin main
                    '''
                }
            }
        }
        
        stage('Package Chart') {
            steps {
                script {
                    def newVersion = sh(script: "npx semantic-release --dry-run | grep 'next version' | awk '{print \$3}'", returnStdout: true).trim()
                    sh "helm package . --version ${newVersion} --destination ."
                    sh "zip ${CHART_NAME}-${newVersion}.zip ${CHART_NAME}-${newVersion}.tgz"
                }
            }
        }
        
        stage('Create GitHub Release') {
            steps {
                script {
                    def newVersion = sh(script: "npx semantic-release --dry-run | grep 'next version' | awk '{print \$3}'", returnStdout: true).trim()
                    sh "npx release-it ${newVersion} --github.release --github.assets=${CHART_NAME}-${newVersion}.zip"
                }
            }
        }
    }
}
